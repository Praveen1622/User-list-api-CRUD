[{"D:\\nikhil\\users\\src\\index.js":"1","D:\\nikhil\\users\\src\\App.js":"2","D:\\nikhil\\users\\src\\component\\Users.js":"3","D:\\nikhil\\users\\src\\component\\Navbar.js":"4","D:\\nikhil\\users\\src\\component\\AddUser.js":"5","D:\\nikhil\\users\\src\\component\\ViewUser.js":"6","D:\\nikhil\\users\\src\\component\\UploadImage.js":"7","D:\\nikhil\\users\\src\\Services\\API.js":"8"},{"size":340,"mtime":1688116260849,"results":"9","hashOfConfig":"10"},{"size":609,"mtime":1688708451589,"results":"11","hashOfConfig":"10"},{"size":2511,"mtime":1689133945987,"results":"12","hashOfConfig":"10"},{"size":1491,"mtime":1689059088557,"results":"13","hashOfConfig":"10"},{"size":5924,"mtime":1689051279586,"results":"14","hashOfConfig":"10"},{"size":3369,"mtime":1688724783424,"results":"15","hashOfConfig":"10"},{"size":2565,"mtime":1689158501863,"results":"16","hashOfConfig":"10"},{"size":1451,"mtime":1689073586293,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xzjq8j",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\nikhil\\users\\src\\index.js",[],[],"D:\\nikhil\\users\\src\\App.js",["47"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Users from './component/Users';\nimport ViewUser from './component/ViewUser';\nimport Navbar from './component/Navbar';\nimport AddUser from './component/AddUser';\n\nfunction App() {\n  return (\n<>\n     <Navbar />\n    \n         <Routes>\n               <Route path='/' element= { <Users /> } />\n               <Route path='/viewuser/:id' element= { <ViewUser /> } />\n               <Route path='/adduser' element= { <AddUser /> } />\n         </Routes>\n\n </>\n  );\n}\n\nexport default App;\n","D:\\nikhil\\users\\src\\component\\Users.js",["48","49","50","51"],[],"import React, { useEffect, useState } from 'react';\r\nimport { getAllUsers } from '../Services/API';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Users.css';\r\nconst Users = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const callUserAPI = async () => {\r\n    const response = await getAllUsers();\r\n    // console.log(response, \"response\");\r\n    setData(response.users);\r\n  };\r\n\r\n  useEffect(() => {\r\n    callUserAPI();\r\n  }, []);\r\n\r\n  const searchData = JSON.parse(localStorage.getItem('search'));\r\n  const updateUser = JSON.parse(localStorage.getItem('update'));\r\n  const getAddedUser = JSON.parse(localStorage.getItem('added'));\r\n  const getDeletedData = JSON.parse(localStorage.getItem('delete'));\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchData?.users) {\r\n      setData(searchData?.users);\r\n      localStorage.removeItem('search');\r\n    }\r\n  }, [searchData]);\r\n  console.log(searchData, \"searchDatasearchData\")\r\n  useEffect(() => {\r\n\r\n    if (data?.length && updateUser?.id) {\r\n      const newData = data.filter(item => item.id !== updateUser.id);\r\n      const updatedData = [...newData, updateUser];\r\n      setData(updatedData);\r\n      localStorage.removeItem('update');\r\n    }\r\n\r\n    if (data?.length && getAddedUser) {\r\n      const newData = [...data, getAddedUser.data];\r\n      setData(newData);\r\n      localStorage.removeItem('added');\r\n    }\r\n\r\n    if (data?.length && getDeletedData?.id) {\r\n      const updatedData = data.filter((item) => item.id != getDeletedData.id)\r\n      setData(updatedData)\r\n      localStorage.removeItem('delete');\r\n    }\r\n  },\r\n    [data, updateUser, getAddedUser, getDeletedData]);\r\n\r\n  const handleClick = (id) => {\r\n    history(`/viewuser/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n\r\n      {data?.sort((a, b) => a.id - b.id).map(user => (\r\n        <div className='card' key={user.id} onClick={() => handleClick(user.id)} >\r\n          <img alt=\"User Image\" src={user.image} style={{ width: \"300px\" }} />\r\n          <div className='card-content'>\r\n            <p>firstName:{user.firstName}</p>\r\n            <p>lastName: {user.lastName}</p>\r\n            <p>email: {user.email}</p>\r\n            <p>age: {user.age}</p>\r\n            <p>gender: {user.gender}</p>\r\n            <p>birthDate: {user.birthDate}</p>\r\n            <p>phone: {user.phone}</p>\r\n          </div>\r\n\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n\r\n","D:\\nikhil\\users\\src\\component\\Navbar.js",[],[],"D:\\nikhil\\users\\src\\component\\AddUser.js",["52"],[],"import React, { useState } from 'react';\r\nimport './AddUser.css';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UploadImage } from './UploadImage';\r\n\r\nconst AddUser = () => {\r\n    const [user, setUser] = useState({\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"maidenName\": \"\",\r\n        \"age\": \"\",\r\n        \"gender\": \"\",\r\n        \"email\": \"\",\r\n        \"phone\": \"\",\r\n        \"username\": \"\",\r\n        \"password\": \"\",\r\n        \"birthDate\": \"\",\r\n        \"image\": \"\",\r\n        \"bloodGroup\": \"\",\r\n        \"height\": \"\",\r\n        \"weight\": \"\",\r\n        \"eyeColor\": \"\",\r\n    });\r\n\r\n    const [data, setData] = useState(\"\");\r\n    // console.log(data, \"ADDDDDDDDDDDDDD\")\r\n    const history = useNavigate();\r\n    const handleAdd = () => {\r\n        axios.post('https://dummyjson.com/users/add', user, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })\r\n            .then(newData => {\r\n                setData(prevData => [...prevData, newData])\r\n                console.log(newData, \"newData\")\r\n                localStorage.setItem('added', JSON.stringify(newData));\r\n                history(\"/\")\r\n            })\r\n            .catch((error) => {\r\n                console.log(error ,\"AddUser\");\r\n            });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddUser\">\r\n            <div className='profile-container'>\r\n      \r\n            <div className='profile-image' value={user.image}>\r\n                                <UploadImage setUser={setUser} />\r\n                            </div>\r\n                <div className='profile-details'>\r\n                    <div className='containadd'>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>firstName</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.firstName}\r\n                                    onChange={e => setUser((item) => ({ ...item, firstName: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>LastName</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.lastName}\r\n                                    onChange={e => setUser((item) => ({ ...item, lastName: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\"  >\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>E-mail</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.email}\r\n                                    onChange={e => setUser((item) => ({ ...item, email: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>Age</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.age}\r\n                                    onChange={e => setUser((item) => ({ ...item, age: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>Gender</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.gender}\r\n                                    onChange={e => setUser((item) => ({ ...item, gender: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>BirthDate</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.birthDate}\r\n                                    onChange={e => setUser((item) => ({ ...item, birthDate: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <div className=\"text\" style={{ width: '100px' }}>\r\n                                <h4 className='index'>Phone</h4>\r\n                            </div>\r\n                            <div className=\"text\" >\r\n                                <input className='fill' type='text' value={user.phone}\r\n                                    onChange={e => setUser((item) => ({ ...item, phone: e.target.value }))} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className='profile-button' onClick={handleAdd}>ADD</button>\r\n                    <button className='profile-button' onClick={handleCancel}>Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser;\r\n\r\n","D:\\nikhil\\users\\src\\component\\ViewUser.js",["53","54"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getSingleUser } from '../Services/API';\r\nimport './ViewUser.css';\r\n\r\nconst ViewUser = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const history = useNavigate();\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userData = await getSingleUser(id);\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.log(\"Error in fetchData:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleUpdate = () => {\r\n  localStorage.setItem('update', JSON.stringify(user));\r\n  history(\"/\")\r\n  }\r\n  const handleClear = (id) => {\r\n    localStorage.setItem('delete', JSON.stringify({ id: id }));\r\n    history(\"/\")\r\n  }\r\nconst handleCancel = () => {\r\n  history('/')\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div className='profile-container'>\r\n          <img className='profile-image' src={user.image} alt=\"User Image\" />\r\n          <div className='profile-details'>\r\n            <h3 className='profile-userid' style={{}} >User ID: {id}</h3>\r\n            <DisplayField title={'firstName'} user={user.firstName}  toggle ={toggle}   setUser={setUser} />\r\n            <DisplayField title={'email'} user={user.email} toggle ={toggle}  setUser={setUser} />\r\n            <DisplayField title={'age'} user={user.age}  toggle ={toggle} setUser={setUser} />\r\n            <DisplayField title={'gender'} user={user.gender} toggle ={toggle}  setUser={setUser} />\r\n            <DisplayField title={'birthDate'} user={user.birthDate}  toggle ={toggle} setUser={setUser} />\r\n            <DisplayField title={'phone'} user={user.phone}  toggle ={toggle} setUser={setUser} />\r\n            <div className='profile-action'>\r\n            {!toggle ? (\r\n              <>\r\n              <button className='profile-button' onClick={() => setToggle((prev) => !prev)}>Edit</button>\r\n              <button className='profile-button' onClick={(id) => handleClear(user.id)}>Delete</button>\r\n              </>\r\n              ) : (\r\n                <>\r\n                <button className='profile-button' onClick={() =>  handleUpdate()}>Update</button>\r\n                <button className='profile-button' onClick={handleCancel}>Cancel</button>\r\n                </>\r\n            )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading user data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewUser;\r\n\r\nconst DisplayField = ({title, user, toggle, setUser}) => {\r\n  return (\r\n    <div className='contain'>\r\n      <div  className =\"text\" style={{width: '100px'}}>\r\n        <h4 className='index'>{title}:</h4>\r\n      </div>\r\n      <div className =\"text\" >\r\n        {\r\n          toggle ? (\r\n            <input\r\n            className='fill'\r\n              type='text'\r\n              value={user}\r\n              onChange={e => {\r\n                  // console.log({[title] : e.target.value} , \"Changes\")\r\n                setUser(prevUser =>({...prevUser, [title] : e.target.value}))\r\n              }}\r\n            />\r\n          ) : (\r\n            <p className=''>{user}</p>\r\n          ) \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst style = {width: '-webkit-fill-available'}\r\n\r\n","D:\\nikhil\\users\\src\\component\\UploadImage.js",["55"],[],"import React from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport \"./UploadImage.css\"\r\nimport { Margin } from '@mui/icons-material';\r\nexport function UploadImage({setUser}){\r\n    const [images, setImages] = React.useState([]);\r\n    const maxNumber = 69;\r\n\r\n    const onChange = (imageList, addUpdateIndex) => {\r\n        // data for submit\r\n        // console.log(imageList[0]?.data_url, addUpdateIndex, \"onChange\");\r\n        setImages(imageList);\r\n        setUser((item) => ({ ...item, image: imageList[0]?.data_url }))\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ImageUploading\r\n                multiple\r\n                value={images}\r\n                onChange={onChange}\r\n                maxNumber={maxNumber}\r\n                dataURLKey=\"data_url\"\r\n            >\r\n                {({\r\n                    imageList,\r\n                    onImageUpload,\r\n                    onImageUpdate,\r\n                    onImageRemove,\r\n                    isDragging,\r\n                    dragProps,\r\n                }) => {\r\n                    // console.log(imageList, \"imageList\")\r\n                    return (\r\n                        // write your building UI\r\n                        <div className=\"upload__image-wrapper\">\r\n    \r\n                        {!imageList?.length ? (\r\n                                <button\r\n                                style={isDragging ? { color: 'red' } : undefined}\r\n                                onClick={onImageUpload}\r\n                                {...dragProps}\r\n                                className='hello'\r\n                            >\r\n                               Add Image\r\n                            </button>\r\n                            ) : null} \r\n                            \r\n                            {imageList.map((image, index) => (\r\n                                <div key={index} className=\"image-item\">\r\n                                    <img src={image['data_url']} alt=\"\" width=\"100\" />\r\n                                    <div className=\"image-item__btn-wrapper\">\r\n                                        <button onClick={() => onImageUpdate(index)}>Update</button>\r\n                                        <button onClick={() => onImageRemove(index)}>Remove</button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </ImageUploading>\r\n        </div>\r\n    );\r\n            }\r\n\r\n\r\n","D:\\nikhil\\users\\src\\Services\\API.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":2,"column":27,"nodeType":"58","messageId":"59","endLine":2,"endColumn":33},{"ruleId":"56","severity":1,"message":"60","line":8,"column":10,"nodeType":"58","messageId":"59","endLine":8,"endColumn":22},{"ruleId":"56","severity":1,"message":"61","line":8,"column":24,"nodeType":"58","messageId":"59","endLine":8,"endColumn":39},{"ruleId":"62","severity":1,"message":"63","line":50,"column":57,"nodeType":"64","messageId":"65","endLine":50,"endColumn":59},{"ruleId":"66","severity":1,"message":"67","line":66,"column":11,"nodeType":"68","endLine":66,"endColumn":79},{"ruleId":"56","severity":1,"message":"69","line":26,"column":12,"nodeType":"58","messageId":"59","endLine":26,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":41,"column":11,"nodeType":"68","endLine":41,"endColumn":78},{"ruleId":"56","severity":1,"message":"70","line":101,"column":7,"nodeType":"58","messageId":"59","endLine":101,"endColumn":12},{"ruleId":"56","severity":1,"message":"71","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'data' is assigned a value but never used.","'style' is assigned a value but never used.","'Margin' is defined but never used."]